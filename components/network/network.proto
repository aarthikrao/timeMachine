syntax = "proto3";
package network;

import "models/jobmodels/job.proto";

option go_package = "github.com/aarthikrao/timeMachine/components/network;network";

service JobStore {
    
    // GetJob fetches the job from a time machine instance
    rpc GetJob(jobmodels.JobFetchDetails) returns (jobmodels.JobCreationDetails) {}

    // SetJob adds the job to a time machine instance
    rpc SetJob(jobmodels.JobCreationDetails) returns (jobmodels.JobCreationDetails) {}

    // DeleteJob will remove the job from time machine instance
    rpc DeleteJob(jobmodels.JobFetchDetails) returns (jobmodels.Empty){}

    // ReplicateSetJob is the same as SetJob. It is called only by the leader to replicate the job on the follower
    rpc ReplicateSetJob(jobmodels.JobCreationDetails) returns (jobmodels.JobCreationDetails) {}

    // ReplicateDeleteJob is the same as DeleteJobJob. It is called only by the leader to replicate the job on the follower
    rpc ReplicateDeleteJob(jobmodels.JobFetchDetails) returns (jobmodels.Empty){}

    // HealthCheck is used for getting the health of this node. This is usually called only from the master node
    rpc HealthCheck(jobmodels.HealthRequest) returns (jobmodels.HealthResponse){}
}